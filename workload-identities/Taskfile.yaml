version: '3'

env:
  ACR_NAME: bjdcsa
  ACR_RG: Core_ContainerRepo_RG
  COMMIT_VERSION: workloadid-9cc7fb7f16eg
  DEFAULT_REGION: canadaeast
  TAG: "Workload Identity Demo Application"
  
tasks:
  default:
    cmds:
    - task --list 

  up:
    desc: Creates a complete {{.TAG}} environment
    cmds:
    - terraform -chdir=./infrastructure workspace new {{.REGION}} || true
    - terraform -chdir=./infrastructure workspace select {{.REGION}}
    - terraform -chdir=./infrastructure init
    - task: apply
    #- task: update-firewalls
    - task: update-sql
    - task: deploy
    vars: 
      REGION: '{{default .DEFAULT_REGION .CLI_ARGS}}'  
      
  apply:
    cmds:
    - terraform -chdir=./infrastructure apply -auto-approve -var "region={{.REGION}}" -var "tags={{.TAG}}" 
    - task: creds
    vars: 
      REGION: '{{default .DEFAULT_REGION .CLI_ARGS}}'

  creds:
    desc: Gets credential file for newly created AKS cluster
    cmds:
    - az aks get-credentials -g {{.RG}} -n {{.AKS}} --overwrite-existing
    - kubelogin convert-kubeconfig -l azurecli
    vars:
      RG: 
        sh: terraform -chdir=./infrastructure output -raw AKS_RESOURCE_GROUP
      AKS: 
        sh: terraform -chdir=./infrastructure output -raw AKS_CLUSTER_NAME

  deploy:
    desc: Deploys Todo application via Helm
    cmds:
    - helm upgrade -i workloadid --set ACR_NAME="{{.ACR_NAME}}" --set COMMIT_VERSION={{.COMMIT_VERSION}} --set APP_NAME={{.APP_NAME}} --set ARM_WORKLOAD_APP_ID={{.ARM_WORKLOAD_APP_ID}} --set ARM_TENANT_ID={{.ARM_TENANT_ID}} --set APP_INSIGHTS="{{.APP_INSIGHTS}}" ./chart
    vars:
      APP_NAME: 
        sh: terraform -chdir=./infrastructure output -raw APP_NAME
      ARM_WORKLOAD_APP_ID: 
        sh: terraform -chdir=./infrastructure output -raw ARM_WORKLOAD_APP_ID
      ARM_TENANT_ID:
        sh: terraform -chdir=./infrastructure output -raw ARM_TENANT_ID
      APP_INSIGHTS:
        sh: terraform -chdir=./infrastructure output -raw APP_INSIGHTS

  update-firewalls:
    desc: Updates firewall rules for Azure Container Registry
    cmds:
    - ./scripts/acr-update.sh -g {{.ACR_RG}} -n {{.ACR_NAME}}

  update-sql:
    desc: Updates SQL Server with proper configuration
    cmds:
    - ./scripts/setup-sql.sh

  down:
    desc: Destroys all Azure resources and cleans up Terraform
    dir: ./infrastructure
    cmds:
    - az group list --tag Application="{{.TAG}}" --query "[].name" -o tsv | xargs -ot -n 1 az group delete -y --verbose --no-wait -n || true
    - rm -rf terraform.tfstate.d .terraform.lock.hcl .terraform terraform.tfstate terraform.tfstate.backup .terraform.tfstate.lock.info || true
