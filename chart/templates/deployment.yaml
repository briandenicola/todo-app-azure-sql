apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ print .Values.CLUSTER_NAME "-" .Values.NAMESPACE "-identity" }}
  annotations:
    azure.workload.identity/client-id: {{ .Values.ARM_WORKLOAD_APP_ID }}
    azure.workload.identity/tenant-id: {{ .Values.ARM_TENANT_ID }}
  labels:
    azure.workload.identity/use: "true"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: todoapi
  namespace: {{ .Values.NAMESPACE }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: todoapi
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: todoapi
    spec:
      serviceAccountName: {{ print .Values.CLUSTER_NAME "-" .Values.NAMESPACE "-identity" }} 
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000  
        supplementalGroups: [2000]
        fsGroup: 2000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: todo
        image:  {{ print .Values.ACR_NAME "/todoapi:" .Values.COMMIT_VERSION }} 
        imagePullPolicy: Always
        securityContext:
          runAsNonRoot: true
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: false  
        ports:
        - containerPort: 8443
        env:
        - name: BJD_TODO_KEYVAULT
          value: {{ .Values.KEYVAULT_NAME }}
        - name: BJD_TODO_AZURESQL
          value: {{ .Values.AZURESQL_NAME }}
        resources:
          limits:
            memory: "512Mi"
            cpu: "2"
          requests:
            memory: "128Mi"
            cpu: "0.5"
---
apiVersion: v1
kind: Service
metadata:
  name: todoapi-svc
  namespace: {{ .Values.NAMESPACE }}
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  selector:
    app: todoapi
  ports:
  - port: 8443
    targetPort: 8443
  type: LoadBalancer
